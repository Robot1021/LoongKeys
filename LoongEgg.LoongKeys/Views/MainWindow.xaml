<Window
    x:Class="LoongEgg.LoongKeys.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrl="clr-namespace:LoongEgg.ViewBase.Controls;assembly=LoongEgg.ViewBase.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:LoongEgg.LoongKeys"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="MainWindow"
    Width="520"
    Height="150"
    AllowsTransparency="True"
    Background="Transparent"
    SnapsToDevicePixels="True"
    Topmost="True"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">

    <!--  Height="680" Width="360"  -->

    <!--
        微信: InnerGeeker
        微信 / B站: 香辣恐龙蛋
    -->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="36" />
            <RowDefinition Height="*" />
            <RowDefinition Height="0" />
        </Grid.RowDefinitions>

        <!--  标题栏和三大金刚  -->
        <Border
            x:Name="title"
            Grid.Row="0"
            Background="{StaticResource xBackground.Title}"
            MouseLeave="Border_MouseLeave"
            MouseLeftButtonDown="Border_MouseLeftButtonDown">

            <!--  Background="{StaticResource xBackground.Title}"  -->
            <!--  改变边框的逻辑  -->
            <Border.Triggers>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>

                            <!--  使边框透明  -->
                            <ColorAnimation
                                Storyboard.TargetName="mainContentBorder"
                                Storyboard.TargetProperty="BorderBrush.Color"
                                To="Transparent"
                                Duration="0:0:0.2" />

                            <!--  改变圆角大小  -->
                            <!--<ObjectAnimationUsingKeyFrames
                                             Storyboard.TargetName="mainContentBorder"
                                             Storyboard.TargetProperty="CornerRadius">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius TopLeft="30" TopRight="30"
                                                      BottomLeft="30" BottomRight="30"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>-->

                            <!--  改变边框大小  -->
                            <!--<ThicknessAnimation To="30, 30, 30, 30"
                                               Duration="0:0:0.2"
                                               Storyboard.TargetName="mainContentBorder"
                                               Storyboard.TargetProperty="BorderThickness"/>-->
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Border.Triggers>

            <!--  隐藏标题逻辑  -->
            <x:Code>
                <![CDATA[
                   private void Border_MouseLeftButtonDown(object sender, MouseButtonEventArgs e)
                        => DragMove(); 
                   private void Border_MouseLeave(object sender, MouseEventArgs e) 
                        => title.Visibility = Visibility.Hidden; 
            ]]>
            </x:Code>

            <Grid>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Foreground="White"
                    Text="LoongKeys" />

                <!--  RelayCommand方法控制最大化、最小化和关闭  -->
                <StackPanel
                    HorizontalAlignment="Right"
                    DataContext="{x:Static ctrl:WindowStateViewModel.Instance}"
                    Orientation="Horizontal">
                    <Button
                        Command="{Binding CommandMinimze}"
                        Content="-"
                        Style="{StaticResource ButtonStyle.HoverGrowWindow}" />
                    <Button
                        Command="{Binding CommandMaximize}"
                        Content="[ ]"
                        Style="{StaticResource ButtonStyle.HoverGrowWindow}" />
                    <Button
                        Command="{Binding CommandClose}"
                        Content="X"
                        Style="{StaticResource ButtonStyle.HoverGrowWindow}" />
                </StackPanel>

            </Grid>

        </Border>

        <!--  MainContent 窗口主体  -->
        <Border
            x:Name="mainContentBorder"
            Grid.Row="1"
            Background="Transparent"
            BorderBrush="{StaticResource xBackground.Title}"
            BorderThickness="2,0,2,2"
            ClipToBounds="True"
            MouseEnter="Border_MouseEnter"
            Opacity="1">

            <!--  Set DataContext = new MainContentViewModel{ ButtonIsEnabled = true };  -->
            <!--<Border.DataContext>
                <local:MainContentViewModel ButtonIsEnabled ="True"/>
            </Border.DataContext>-->

            <!--  改变边框的逻辑  -->
            <Border.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>

                            <!--  使边框出现  -->
                            <ColorAnimation
                                Storyboard.TargetName="mainContentBorder"
                                Storyboard.TargetProperty="BorderBrush.Color"
                                To="{StaticResource xBackgroundColor.Title}"
                                Duration="0:0:0.2" />

                            <!--  改变圆角大小  -->
                            <!--<ObjectAnimationUsingKeyFrames
                                             Storyboard.TargetName="mainContentBorder"
                                             Storyboard.TargetProperty="CornerRadius">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius TopLeft="0" TopRight="0"
                                                      BottomLeft="0" BottomRight="0"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>-->

                            <!--  改变边框大小  -->
                            <!--<ThicknessAnimation To="6, 6, 6, 6"
                                               Duration="0:0:0.2"
                                               Storyboard.TargetName="mainContentBorder"
                                               Storyboard.TargetProperty="BorderThickness"/>-->

                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Border.Triggers>

            <!--  显示标题逻辑  -->
            <x:Code>
                <![CDATA[
                    private void Border_MouseEnter(object sender, MouseEventArgs e) 
                        => title.Visibility = Visibility.Visible;
                    ]]>
            </x:Code>

            <!--  View Model的最终用户们  -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="52" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!--  ViewModel 放在这里也是可以的,注意变化  -->
                <!--  Set DataContext = new MainContentViewModel{ ButtonIsEnabled = true };  -->
                <Grid.DataContext>
                    <local:MainContentViewModel />
                </Grid.DataContext>

                <!--  Blur glass  -->
                <Border
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Background="Black"
                    BorderBrush="Black"
                    BorderThickness="3"
                    Opacity="0.3">
                    <Border.Effect>
                        <BlurEffect
                            KernelType="Gaussian"
                            Radius="1"
                            RenderingBias="Quality" />
                    </Border.Effect>

                </Border>

                <!--  Modifier Buttons  -->
                <UniformGrid
                    Grid.Row="0"
                    Margin="3.5,3.5,3.5,0"
                    Columns="4"
                    Opacity="1">
                    <Button
                        Content="Ctrl"
                        IsEnabled="{Binding IsCtrlEnabled}"
                        Style="{StaticResource ButtonStyle.IsEnabledGrow}" />
                    <Button
                        Content="Shift"
                        IsEnabled="{Binding IsShiftEnabled}"
                        Style="{StaticResource ButtonStyle.IsEnabledGrow}" />
                    <Button
                        Content="Alt"
                        IsEnabled="{Binding IsAltEnabled}"
                        Style="{StaticResource ButtonStyle.IsEnabledGrow}" />
                    <Button
                        Content="Win"
                        IsEnabled="{Binding IsWinEnabled}"
                        Style="{StaticResource ButtonStyle.IsEnabledGrow}" />
                </UniformGrid>

                <!--  Drop shadow Frame  -->
                <Border
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    BorderBrush="Black"
                    BorderThickness="2"
                    Opacity="0.1">
                    <Border.Effect>
                        <DropShadowEffect
                            BlurRadius="1"
                            Opacity="0.5"
                            RenderingBias="Quality"
                            ShadowDepth="2" />
                    </Border.Effect>
                </Border>

                <!--  Keys Input  -->
                <ItemsControl Grid.Row="1" ItemsSource="{Binding Items}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Margin="2" Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ctrl:TextBlockCount
                                Width="42"
                                Height="42"
                                Count="{Binding Flags}"
                                Text="{Binding Text}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>

        </Border>

        <!--
            ctrl:TextBlockCount Width="42" Height="42"
            Text="{Binding Text}"
            Count="{Binding Flags}"/>
        -->
        <!--  页脚  -->

    </Grid>
</Window>

